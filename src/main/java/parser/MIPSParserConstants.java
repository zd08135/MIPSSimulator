/* Generated By:JavaCC: Do not edit this line. MIPSParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MIPSParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 10;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 11;
  /** RegularExpression Id. */
  int NOP = 13;
  /** RegularExpression Id. */
  int ADD = 14;
  /** RegularExpression Id. */
  int ADDI = 15;
  /** RegularExpression Id. */
  int ADDIU = 16;
  /** RegularExpression Id. */
  int ADDU = 17;
  /** RegularExpression Id. */
  int SUB = 18;
  /** RegularExpression Id. */
  int SUBU = 19;
  /** RegularExpression Id. */
  int CLO = 20;
  /** RegularExpression Id. */
  int CLZ = 21;
  /** RegularExpression Id. */
  int SLT = 22;
  /** RegularExpression Id. */
  int SLTI = 23;
  /** RegularExpression Id. */
  int SLTIU = 24;
  /** RegularExpression Id. */
  int SEB = 25;
  /** RegularExpression Id. */
  int SEH = 26;
  /** RegularExpression Id. */
  int AND = 27;
  /** RegularExpression Id. */
  int ANDI = 28;
  /** RegularExpression Id. */
  int LUI = 29;
  /** RegularExpression Id. */
  int NOR = 30;
  /** RegularExpression Id. */
  int OR = 31;
  /** RegularExpression Id. */
  int ORI = 32;
  /** RegularExpression Id. */
  int XOR = 33;
  /** RegularExpression Id. */
  int XORI = 34;
  /** RegularExpression Id. */
  int SLL = 35;
  /** RegularExpression Id. */
  int SLLV = 36;
  /** RegularExpression Id. */
  int SRA = 37;
  /** RegularExpression Id. */
  int SRAV = 38;
  /** RegularExpression Id. */
  int SRL = 39;
  /** RegularExpression Id. */
  int SRLV = 40;
  /** RegularExpression Id. */
  int ROTR = 41;
  /** RegularExpression Id. */
  int ROTRV = 42;
  /** RegularExpression Id. */
  int B = 43;
  /** RegularExpression Id. */
  int BGEZ = 44;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 45;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 46;
  /** RegularExpression Id. */
  int HEX_LITERAL = 47;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 48;
  /** RegularExpression Id. */
  int REG_LOGO = 49;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "\"nop\"",
    "\"add\"",
    "\"addi\"",
    "\"addiu\"",
    "\"addu\"",
    "\"sub\"",
    "\"subu\"",
    "\"clo\"",
    "\"clz\"",
    "\"slt\"",
    "\"slti\"",
    "\"sltiu\"",
    "\"seb\"",
    "\"seh\"",
    "\"and\"",
    "\"andi\"",
    "\"lui\"",
    "\"nor\"",
    "\"or\"",
    "\"ori\"",
    "\"xor\"",
    "\"xori\"",
    "\"sll\"",
    "\"sllv\"",
    "\"sra\"",
    "\"srav\"",
    "\"srl\"",
    "\"srlv\"",
    "\"rotr\"",
    "\"rotrv\"",
    "\"b\"",
    "\"bgez\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "\"$\"",
  };

}
